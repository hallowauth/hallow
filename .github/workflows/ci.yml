on:
  pull_request: {}
  push:
    branches:
      - master


jobs:
  go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.13', '1.14']
    name: Go ${{ matrix.go }} build
    steps:
      - uses: actions/checkout@master
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - run: go vet ./...
      - run: |
          output=$(go fmt ./...)
          if [[ ! "$output" = "" ]]; then
            printf "The following files are not go formatted:\n%s\n" "$output"
            exit 1
          fi
      - run: go test -coverprofile=coverage.out ./...
      - run: go tool cover -html=coverage.out -o coverage.html
      - uses: actions/upload-artifact@v1
        with:
          name: coverage.html
          path: coverage.html
        if: matrix.go == '1.14'

      - run: make hallow.zip
      - uses: actions/upload-artifact@v1
        with:
          name: hallow.zip
          path: hallow.zip
        if: matrix.go == '1.14'
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform: ['latest']
    name: Terraform ${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@master

      - name: terraform fmt
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ matrix.terraform }}
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: 'terraform/'
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: terraform init
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ matrix.terraform }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform/'
          tf_actions_comment: true
          args: '-backend=false'
        env:
          AWS_DEFAULT_REGION: "us-east-1"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: terraform validate
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ matrix.terraform }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: 'terraform/'
          tf_actions_comment: true
        env:
          AWS_DEFAULT_REGION: "us-east-1"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
